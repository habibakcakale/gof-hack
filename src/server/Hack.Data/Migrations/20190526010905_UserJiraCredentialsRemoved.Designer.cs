// <auto-generated />
using Hack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hack.Data.Migrations
{
    [DbContext(typeof(HackContext))]
    [Migration("20190526010905_UserJiraCredentialsRemoved")]
    partial class UserJiraCredentialsRemoved
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hack.Domain.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JiraId");

                    b.Property<string>("Name");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Hack.Domain.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("WorkItemId");

                    b.HasKey("Id");

                    b.HasIndex("WorkItemId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("Hack.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Level");

                    b.Property<string>("PasswordHashed")
                        .IsRequired();

                    b.Property<int>("Role");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Username");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Hack.Domain.WorkItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("Estimate");

                    b.Property<string>("JiraTicketId");

                    b.Property<string>("Platform");

                    b.Property<int>("ProjectId");

                    b.Property<string>("Title");

                    b.Property<int?>("UserLevel");

                    b.Property<int>("UserRole");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("WorkItem");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WorkItem");
                });

            modelBuilder.Entity("Hack.Domain.CompletedWorkItem", b =>
                {
                    b.HasBaseType("Hack.Domain.WorkItem");

                    b.Property<int>("TimeSpent");

                    b.Property<int>("UserId");

                    b.HasIndex("UserId");

                    b.ToTable("CompletedWorkItem");

                    b.HasDiscriminator().HasValue("CompletedWorkItem");
                });

            modelBuilder.Entity("Hack.Domain.Project", b =>
                {
                    b.HasOne("Hack.Domain.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hack.Domain.Tag", b =>
                {
                    b.HasOne("Hack.Domain.WorkItem", "WorkItem")
                        .WithMany("Tags")
                        .HasForeignKey("WorkItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hack.Domain.WorkItem", b =>
                {
                    b.HasOne("Hack.Domain.Project", "Project")
                        .WithMany("WorkItems")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hack.Domain.CompletedWorkItem", b =>
                {
                    b.HasOne("Hack.Domain.User", "User")
                        .WithMany("CompletedWorkItems")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
